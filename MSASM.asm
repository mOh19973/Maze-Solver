		title	"Maze Solver"
		list	p=16f84A
		radix	hex
		include "p16f84A.inc"

COUNT1	EQU		D'12' 										;registers used in delays
COUNT2	EQU		D'13' 
COUNT3	EQU		D'14'

MODE	EQU		D'15' 
															; FLG BITS TO RECORD CURRENT MODE
															; BIT 0: MENU
															; BIT 1: DEFAULT
															; BIT 2: OBSTACLE
															; BIT 3: MAZE
MENU	EQU		D'16' 		;COUNT RECORD CURRENT MENU SELECTION
STARTPOS	EQU	D'17'										;KEEPS TRACK OF STARTING POSITION
ENDPOS		EQU	D'18'										;KEEPS TRACK OF ENDING POSITION
POS			EQU	D'19'										;KEEPS TRACK OF THE CURSOR
ITER1		EQU	D'20'										;KEEPS TRACK OF LAST DIGIT OF ITERATION

POS00	EQU		D'21'
POS01	EQU		D'22'
POS02	EQU		D'23'
POS03	EQU		D'24'
POS04	EQU		D'25'
POS05	EQU		D'26'
POS06	EQU		D'27'
POS07	EQU		D'28'
POS08	EQU		D'29'
POS09	EQU		D'30'
POS10	EQU		D'31'
POS11	EQU		D'32'
POS12	EQU		D'33'
POS13	EQU		D'34'
POS14	EQU		D'35'
POS15	EQU		D'36'
POS16	EQU		D'37'
POS17	EQU		D'38'
POS18	EQU		D'39'
POS19	EQU		D'40'

																;BIT0 -> START CELL - S
																;BIT1 -> END CELL - E
																;BIT2 -> OBSTACLE CELL - bLOCK
																;BIT3 -> EMPTY CELL - UNDERLINE
																;BIT4 -> VISITED CELL - STAR


ITER2	EQU	D'41'												;KEEPS TRACK OF FIRST DIGIT OF ITERATION
TEMP	EQU	D'42'												;TEMP STORAGE
REM		EQU	D'43'												;REMAINING OBSTACLES
STARTSET	EQU	D'44'											;FLAG TO CHECK IF START POS IS SET
ENDSET		EQU	D'45'											;FLAG TO CHECK IF END POS IS SET
TCNT1		EQU D'46'
TCNT2		EQU	D'47'
POSHOLD		EQU	D'48'											;POSITION
		ORG		0x0
		GOTO 	START

		ORG 	0X04

		BTFSC	INTCON,RBIF
		GOTO	BUTTON_ISR
		BTFSC	INTCON,T0IF
		GOTO	TIMER_ISR
		BCF		INTCON,RBIF
		BCF		INTCON,T0IF
		RETFIE

TIMER_ISR	
			DECFSZ	TCNT2
			GOTO	EXIT


			BTFSS	POS,4
			GOTO	NL
			BTFSS	POS,3
			GOTO	NL
			BTFSS	POS,0
			GOTO	NL
			CLRF	POS
			CALL	SETCPOS											;SET CURSOR TO CURRENT POSITION
			GOTO	EXI2
NL
			BTFSS	POS,3
			GOTO	NLF
			BTFSS	POS,0
			GOTO	NLF
			MOVLW	B'00010000'
			MOVWF	POS
			CALL	SETCPOS
			GOTO	EXI2
NLF			INCF	POS
			CALL	SETCPOS

EXI2		MOVLW	B'00011000'
			MOVWF	TCNT2

EXIT		BCF		INTCON,T0IF
			RETFIE

BUTTON_ISR	BTFSS PORTB,4
			CALL	MOVE_ISR
			BTFSS	PORTB,5
			CALL	CONFIRM_ISR
			BTFSS	PORTB,6
			CALL	S_ISR
			BTFSS	PORTB,7
			CALL	E_ISR

			BCF		INTCON,RBIF
			RETFIE

MOVE_ISR	BTFSC	MODE,0
			GOTO	MENU_MOVE
			BTFSC	MODE,1
			GOTO	DEFAULT_MOVE
			BTFSC	MODE,2
			GOTO	OBSTACLE_MOVE
			BTFSC	MODE,3
			GOTO	MAZE_MOVE
			RETURN

MENU_MOVE	BTFSC	MENU,0
			GOTO	SELEC_0
			BTFSC	MENU,1
			GOTO	SELEC_1
			BTFSC	MENU,2
			GOTO	SELEC_2
			RETURN

SELEC_0		CALL WRITE_SPC
			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00000'
			MOVWF	PORTA	
			CALL	TOGGLE	
																;SETS THE CURSOR 
			
			CALL WRITE_AES

			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00000'
			MOVWF	PORTA	
			CALL	TOGGLE	
																;SETS THE CURSOR 

			MOVLW	B'00000010'
			MOVWF	MENU
			
			RETURN

SELEC_1		CALL WRITE_SPC
			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01011'
			MOVWF	PORTA	
			CALL	TOGGLE	
																;SETS THE CURSOR 
			
			CALL WRITE_AES

			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01011'
			MOVWF	PORTA	
			CALL	TOGGLE	
																;SETS THE CURSOR 

			MOVLW	B'00000100'
			MOVWF	MENU
			
			RETURN

SELEC_2		CALL WRITE_SPC
			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00011'
			MOVWF	PORTA	
			CALL	TOGGLE	
																;SETS THE CURSOR 
			
			CALL WRITE_AES

			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00011'
			MOVWF	PORTA	
			CALL	TOGGLE	
																;SETS THE CURSOR 

			MOVLW	B'00000001'
			MOVWF	MENU
			
			RETURN

DEFAULT_MOVE	RETURN
OBSTACLE_MOVE	BTFSS	POS,4
				GOTO	NOT_LAST
				BTFSS	POS,3
				GOTO	NOT_LAST
				CALL	SOLVE

NOT_LAST	
				BTFSS	POS,3
				GOTO	NOT_LF
				BTFSS	POS,0
				GOTO	NOT_LF
				MOVLW	B'00010000'
				MOVWF	POS
				MOVLW	B'01100'
				MOVWF	PORTA
				CALL	TOGGLE
				MOVLW	B'00000'
				MOVWF	PORTA
				CALL	TOGGLE
				RETURN
NOT_LF			INCF	POS
				CALL	SETCPOS
				RETURN
MAZE_MOVE	RETURN

CONFIRM_ISR	
			
			BTFSC	MODE,0
			GOTO	MENU_CONF
			BTFSC	MODE,1
			GOTO	DEFAULT_CONF
			BTFSC	MODE,2
			GOTO	OBSTACLE_CONF
			BTFSC	MODE,3
			GOTO	MAZE_CONF
			RETURN

MENU_CONF	BTFSC	MENU,0
			GOTO	SEL_0
			BTFSC	MENU,1
			GOTO	SEL_1
			BTFSC	MENU,2
			GOTO	SEL_2
			RETURN

SEL_0		MOVLW	B'00000010'
			MOVWF	MODE 											;SIGNAL START OF DEFAULT MODE
			BSF		PORTB,2											;TURN ON RED Led
			CALL	DEF_INIT										;INITIALIZE GRID
			CALL	CLEAR
			CALL	WRITE_GRID

			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01101'
			MOVWF	PORTA	
			CALL	TOGGLE
			
			CALL	WRITE_S
			CALL	WRITE_SPC
			CALL	WRITE_@
			

			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01101'
			MOVWF	PORTA	
			CALL	TOGGLE

			CALL	WRITE_0
			CALL	WRITE_COMMA
			CALL	WRITE_5
			
			
			RETURN
SEL_1		
			MOVLW	B'00000100'
			MOVWF	MODE 												;SIGNAL START OF OBSTACLE MODE
			BSF		PORTB,3												;TURN ON GREEN Led
			CALL	OBS_INIT											;INITIALIZE GRID
			CALL CLEAR
			CALL	WRITE_GRID

			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01101'
			MOVWF	PORTA	
			CALL	TOGGLE
		
			CALL	WRITE_S
			CALL	WRITE_SPC
			CALL	WRITE_@

			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01101'
			MOVWF	PORTA	
			CALL	TOGGLE

			CALL	WRITE_0
			CALL	WRITE_COMMA
			CALL	WRITE_0

			CLRF	POS
			INCF	POS												;SET THE POSITION TO FIRST EMPTY ENTRY TO ALLOW BLOCKING CELLS
			CALL	SETCPOS											;SET THE CURSOR TO POINT TO THAT CELL
			MOVLW	D'5'
			MOVWF	REM 											;OBSTACLES REMAINING IS 5
			
			
			RETURN

SEL_2		MOVLW	B'00001000'
			MOVWF	MODE 											;SIGNAL START OF MAZE MODE
			BSF		PORTB,2
			BSF		PORTB,3
			CALL	MAZE_INIT										;INITIALIZE GRID
			CALL CLEAR
			CALL	WRITE_GRID

			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01100'
			MOVWF	PORTA	
			CALL	TOGGLE
		
			CALL	WRITE_O
			CALL	WRITE_B
			CALL	WRITE_S

			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01011'
			MOVWF	PORTA	
			CALL	TOGGLE

			CALL	WRITE_R
			CALL	WRITE_E
			CALL	WRITE_M
			CALL	WRITE_SPC
			CALL	WRITE_5

			CLRF	POS
			CALL	SETCPOS										;SET THE CURSOR TO POINT TO THAT CELL
			MOVLW	D'5'
			MOVWF	REM 										;OBSTACLES REMAINING IS 5
			CLRF	STARTSET
			CLRF	ENDSET

			MOVLW	B'00011000'
			MOVWF	TCNT2;
			BSF		INTCON,T0IE 								;ENABLING T0 INTERRUPT

			RETURN

DEFAULT_CONF	CALL	SOLVE
				RETURN
OBSTACLE_CONF	
				CALL	CPFSR
				MOVLW	B'00000100'
				MOVWF	INDF
				CALL	WRITE_OBS
				BSF		PORTB,0
				CALL	DELAY1S
				BCF		PORTB,0
																;CALL	SETCPOS
				CALL	OBSTACLE_MOVE
				DECFSZ	REM
				RETURN
				CALL 	SOLVE
				RETURN

MAZE_CONF		CALL	CPFSR
				BTFSS	INDF,3
				GOTO	NOTEM
				CALL	WRITE_OBS
				MOVLW	B'00000100'
				MOVWF	INDF
				DECF	REM
				MOVLW	B'01100'
				MOVWF	PORTA
				CALL	TOGGLE
				MOVLW	B'01111'
				MOVWF	PORTA
				CALL	TOGGLE
				MOVLW	B'10011'
				MOVWF	PORTA
				CALL	TOGGLE
				BSF		REM,4
				MOVF	REM,0
				BCF	REM,4
				MOVWF	PORTA
				CALL	TOGGLE										;WRITE 0
				CALL	SETCPOS
				GOTO	CH_REQ


NOTEM			BSF	PORTB,0
				CALL	DELAY1S
				BCF	PORTB,0
				RETURN

S_ISR	BTFSS	MODE,3												;SETS START POS FOR MAZE MODE
		RETURN

		BTFSC	STARTSET,0
		GOTO	NOEEEE
		
		CALL	CPFSR												;;;LET FSR POINT TO REGISTER CORRESPONDING TO POSITION
		BTFSS	INDF,3
		GOTO	NOEEEE
		CALL	WRITE_S
		MOVLW	B'00000001'
		MOVWF	INDF
		INCF	STARTSET										;FLAG
		CALL	SETCPOS
		BCF		PORTB,2
		MOVF	POS,0
		MOVWF	STARTPOS
		GOTO	CH_REQ 												;CHECK REQUIREMENTS
		
NOEEEE		BSF	PORTB,0
			CALL	DELAY1S
			BCF	PORTB,0
			RETURN
	
E_ISR	BTFSS	MODE,3												;SETS END POS FOR MAZE MODE
		RETURN

		BTFSC	ENDSET,0
		GOTO	NOEEEEE
		
		CALL	CPFSR
		BTFSS	INDF,3
		GOTO	NOEEEEE
		CALL	WRITE_E
		MOVLW	B'00000010'
		MOVWF	INDF
		INCF	ENDSET
		CALL	SETCPOS
		BCF		PORTB,3
		MOVF	POS,0
		MOVWF	ENDPOS
		GOTO	CH_REQ
		
NOEEEEE		BSF	PORTB,0
			CALL	DELAY1S
			BCF	PORTB,0
			RETURN

CH_REQ	INCF	REM
		DECFSZ	REM
		RETURN	
CH_S	BTFSS	STARTSET,0
		RETURN
CH_E	BTFSS	ENDSET,0
		RETURN
		BCF		INTCON,T0IE
		CALL	SOLVE

;---MAZE SOLVER ALGORITHM AND HELPER FUNCTIONS

SOLVE	
		CLRF	ITER1											;INITIALIZE REGISTERS
		CLRF	ITER2											;INITIALIZE REGISTERS

		MOVLW	B'01100'
		MOVWF	PORTA
		CALL	TOGGLE
		MOVLW	B'01011'
		MOVWF	PORTA
		CALL	TOGGLE
		CALL	WRITE_SPC
		CALL	WRITE_SPC
		CALL	WRITE_3SPC
		MOVLW	B'01000'
		MOVWF	PORTA
		CALL	TOGGLE
		MOVLW	B'01011'
		MOVWF	PORTA
		CALL	TOGGLE
		CALL	WRITE_I
		CALL	WRITE_T
		CALL	WRITE_R
		

RERUN	MOVF	STARTPOS,0
		MOVWF	POS
		INCF	ITER1
		BTFSS	ITER1,3
		GOTO	SKP
		BTFSS	ITER1,1
		GOTO	SKP
		CLRF	ITER1
		INCF	ITER2

SKP		CALL	WRITE_ITR
		CALL	SETCPOS
		CALL	CPFSR

CH_RIGHT															;CHECK RIGHT POS
		BTFSS	POS,3
		GOTO	NOTOUT
		BTFSS	POS,0
		GOTO	NOTOUT
		GOTO	CH_LEFT

NOTOUT 	INCF	POS														 ;NOT OUT OF GRID
		CALL	CPFSR
		BTFSC	INDF,1
		GOTO	SOL_FOUND
		BTFSS	INDF,3
		GOTO	NOEMPTY
		CALL	VISIT_POS
		GOTO	CH_RIGHT

NOEMPTY	DECF	POS
		CALL	CPFSR
	

CH_LEFT 																;CHECK LEFT POS
		BTFSC	POS,3
		GOTO	NOTFIRST
		BTFSC	POS,2
		GOTO	NOTFIRST
		BTFSC	POS,1
		GOTO	NOTFIRST
		BTFSC	POS,0
		GOTO	NOTFIRST		
		GOTO	CH_DOWN
NOTFIRST 
		DECF	POS
		CALL	CPFSR
		BTFSC	INDF,1
		GOTO	SOL_FOUND
		BTFSS	INDF,3
		GOTO	NOE		
		CALL	VISIT_POS
		GOTO 	CH_RIGHT

NOE		INCF	POS
		CALL	CPFSR
	

CH_DOWN																			;CHECK DOWN POS
		BTFSS	POS,4
		GOTO	IM_UP
		GOTO	CH_UP
IM_UP	BSF		POS,4
		CALL	CPFSR
		BTFSC	INDF,1
		GOTO	SOL_FOUND
		BTFSS	INDF,3
		GOTO	NOEM
		CALL	VISIT_POS
		GOTO	CH_RIGHT

NOEM	BCF	POS,4
		CALL	CPFSR


CH_UP																			;CHECK UP POS
		BTFSS	POS,4
		GOTO	DEAD
		GOTO	IM_DOWN

IM_DOWN	BCF		POS,4
		CALL	CPFSR
		BTFSC	INDF,1
		GOTO	SOL_FOUND
		BTFSS	INDF,3
		GOTO	NOEMM
		CALL	VISIT_POS
		GOTO	CH_RIGHT

NOEMM	BSF	POS,4
		CALL	CPFSR
		

DEAD																		;CHECK IF STARPOS IS DEAD POS
			MOVF	POS,0
			MOVWF	POSHOLD

			MOVF	STARTPOS,0
			XORWF	POS,1
			INCF	POS
			DECFSZ	POS
			GOTO NVM
			GOTO	NO_PATH													;IE NO SOLUTION

NVM			MOVF	POSHOLD,0
			MOVWF	POS
			CALL	BLOCK_POS
			CALL	CLEAR_VISITED
			CALL	WRITE_GRID
			GOTO	RERUN



NO_PATH		CALL	PWRITER
			CALL	WRITE_X
			BSF		PORTB,2
			CALL	DELAY5S
			GOTO	HERE

SOL_FOUND	CALL	PWRITER
			CALL	WRITE_AES
			BSF		PORTB,3
			CALL	DELAY5S
			GOTO	HERE	
BLOCK_POS	CALL	CPFSR
			MOVLW	B'00000100'
			MOVWF	INDF
			CALL 	SETCPOS
			CALL 	WRITE_AES
			CALL	DELAY200MS
			RETURN

PWRITER		MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01011'
			MOVWF	PORTA
			CALL	TOGGLE
			CALL	WRITE_PATH
			RETURN
VISIT_POS	
			CALL	CPFSR
			MOVLW	B'00010000'
			MOVWF	INDF
			CALL 	SETCPOS
			CALL 	WRITE_AES
			CALL	DELAY200MS
			RETURN

SETCPOS																		;SETS POSITION OF THE CURSOR TO CURRENT POSITION
			BTFSS	POS,4
			GOTO	TOPROWW
			MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			BCF		POS,4
			MOVF	POS,0
			BSF		POS,4
			MOVWF	PORTA
			CALL	TOGGLE
			RETURN	
TOPROWW		MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVF	POS,0
			MOVWF	PORTA
			CALL	TOGGLE
			RETURN

CPFSR																		;SETS FSR TO POINT TO REGISTER CORRESPONDING TO CURRENT POSITION--POS
			BTFSS	POS,4
			GOTO	TOPROW
			BCF		POS,4
			MOVF	POS,0
			BSF		POS,4
			ADDLW	D'31'
			MOVWF	FSR	
			RETURN	

TOPROW		MOVF	POS,0
			ADDLW	D'21'
			MOVWF	FSR	
			RETURN	

WRITE_ITR	MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01110'
			MOVWF	PORTA
			CALL	TOGGLE

			MOVLW	B'10011'
			MOVWF	PORTA
			CALL	TOGGLE
			BSF		ITER2,4
			MOVF	ITER2,0
			MOVWF	PORTA
			CALL	TOGGLE
			BCF		ITER2,4

			MOVLW	B'10011'
			MOVWF	PORTA
			CALL	TOGGLE
			BSF		ITER1,4
			MOVF	ITER1,0
			MOVWF	PORTA
			CALL	TOGGLE
			BCF		ITER1,4
			RETURN

CLEAR_VISITED																;USED TO CLEAR VISTED POSITIONS BEFORE NEXT ITERATION

			MOVLW	D'21'
			MOVWF	FSR

			MOVLW	d'21'
			MOVWF	COUNT1

LLL			DECFSZ	COUNT1
			GOTO	CLRV1

			RETURN

CLRV1		BTFSS	INDF,4
			GOTO	NOT_VIS
			MOVLW	B'00001000'
			MOVWF	INDF
			INCF	FSR
			GOTO	LLL

NOT_VIS		INCF	FSR
			GOTO LLL


			
;----END OF MAZE SOLVER AND HELPER FUNCTIONS
START	CLRF	INTCON														;disbles interrupts
		CLRF	PORTA
		CLRF	PORTB
		BSF		STATUS,RP0													;select bank 1
		CLRF	TRISA														;sets RA<4:0> as outputs
		MOVLW	0xF0		
		MOVWF	TRISB														;sets RB<7:4> as inputs and RB<3:0> as outputs

		BCF		0X81,T0CS
		BCF		0X81,PSA
		BSF		0X81,PS2
		BSF		0X81,PS1
		BSF		0X81,PS0													;SETTING UP OPTION REGISTER

		BCF		STATUS,RP0													; deselects bank 1

;////////////Initialize LCD into 4-bit mode
		
			CALL	DELAY40MS
			MOVLW	B'00010'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00010'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01110'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00001'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00110'
			MOVWF	PORTA
			CALL	TOGGLE

			MOVLW	B'00000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'01111'
			MOVWF	PORTA
			CALL	TOGGLE															;BLINKING CURSOR
;/////////////////////End initialization

;///////////WELCOM SCRREN INITIALIZATION

			CALL WRITE_SPC
			CALL WRITE_SPC
			CALL WRITE_M
			CALL WRITE_A
			CALL WRITE_Z
			CALL WRITE_E
			CALL WRITE_SPC
			CALL WRITE_S
			CALL WRITE_O
			CALL WRITE_L
			CALL WRITE_V
			CALL WRITE_E
			CALL WRITE_R
			CALL	DELAY5S

;------------INITIALIZE MENU SCREEN

HERE		ClRF	PORTB
			MOVLW	B'00000001'
			MOVWF	MODE
			;SIGNAL THAT WE ARE AT MENU MODE
			MOVLW	B'00000001'
			MOVWF	MENU
			;SIGNAL THAT WE ARE AT FIRST SELECTION OF THE MENU

			CALL CLEAR
			CALL WRITE_3SPC
			CALL WRITE_AES
			CALL WRITE_D
			CALL WRITE_E
			CALL WRITE_F
			CALL WRITE_A
			CALL WRITE_U
			CALL WRITE_L
			CALL WRITE_T
			CALL NEWL
			CALL WRITE_SPC
			CALL WRITE_O
			CALL WRITE_B
			CALL WRITE_S
			CALL WRITE_T
			CALL WRITE_A
			CALL WRITE_C
			CALL WRITE_L
			CALL WRITE_E
			CALL WRITE_3SPC
			CALL WRITE_M
			CALL WRITE_A
			CALL WRITE_Z
			CALL WRITE_E

			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00011'
			MOVWF	PORTA	
			CALL	TOGGLE	
			;SETS THE CURSUR 

;---------------------------------



			BSF		INTCON,RBIE
			BSF		INTCON,GIE ;ENABLING THE INTERRUPT ON RBVECTOR 


;////////////////////INFINITE LOOP
INFINITE	GOTO INFINITE
;------------------------------\\\




;---------- INITIALIZING GRID FOR DEFAULT MODE
DEF_INIT	MOVLW	D'21'
			MOVWF	FSR

			CALL	LOAD_OBS
			INCF	FSR
			CALL	LOAD_3EMP
			CALL	LOAD_EMP
			INCF	FSR
			CALL	LOAD_S
			INCF	FSR
			CALL	LOAD_3EMP
			CALL	LOAD_EMP
			incf	FSR
			CALL	LOAD_E
			INCF	FSR
			CALL	LOAD_OBS
			INCF	FSR
			CALL	LOAD_EMP
			INCF	FSR
			CALL	LOAD_OBS
			INCF	FSR
			CALL	LOAD_OBS
			INCF	FSR
			CALL	LOAD_3EMP
			CALL	LOAD_OBS
			INCF	FSR
			CALL	LOAD_OBS
			INCF	FSR


			MOVLW	B'00000101'
			MOVWF	STARTPOS									;SETTING START POSITION

			MOVLW	B'00010000'
			MOVWF	ENDPOS											;SETTING END POSITION

			RETURN

;-------------------------------

;---------- INITIALIZING GRID FOR OBSTACLE MODE
OBS_INIT	
			
			MOVLW	D'21'
			MOVWF	FSR
			
			MOVLW	D'19'
			MOVWF	COUNT1

			CALL	LOAD_S
			INCF	FSR

LOLU		DECFSZ	COUNT1
			GOTO	CONT_L

			CALL	LOAD_E

			MOVLW	B'00000000'
			MOVWF	STARTPOS							;SETTING START POSITION

			MOVLW	B'00011001'
			MOVWF	ENDPOS											;SETTING END POSITION

			RETURN			
		
CONT_L		CALL	LOAD_EMP
			INCF	FSR
			GOTO	LOLU

;-------------------------------

;---------- INITIALIZING GRID FOR MAZE MODE
MAZE_INIT	MOVLW	D'21'
			MOVWF	FSR
			
			MOVLW	D'21'
			MOVWF	COUNT1

LOLUU		DECFSZ	COUNT1
			GOTO	CONT_LL

			RETURN			
		
CONT_LL		CALL	LOAD_EMP
			INCF	FSR
			GOTO	LOLUU
;-------------------------------



;--- HELPER FUNCTIONS FOR GRID INITIIALIZATION AND WRTINIG

LOAD_S		MOVLW	B'00000001'
			MOVWF	INDF
			RETURN

LOAD_E		MOVLW	B'00000010'
			MOVWF	INDF
			RETURN

LOAD_OBS	MOVLW	B'00000100'
			MOVWF	INDF
			RETURN

LOAD_EMP	MOVLW	B'00001000'
			MOVWF	INDF
			RETURN
LOAD_3EMP	CALL	LOAD_EMP
			INCF	FSR
			CALL	LOAD_EMP
			INCF	FSR
			CALL	LOAD_EMP
			INCF	FSR
			RETURN
LOAD_VIS	MOVLW	B'00010000'
			MOVWF	INDF
			RETURN

WRITE_GRID	
			MOVLW	B'01000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00000'
			MOVWF	PORTA	
			CALL	TOGGLE	
																	;SETS THE CURSUR TO 0X00

			MOVLW	D'21'
			MOVWF	FSR

			MOVLW	d'11'
			MOVWF	COUNT1
LL			DECFSZ	COUNT1
			GOTO	WRITE_CELL1

			CALL	NEWL
			MOVLW	d'11'
			MOVWF	COUNT1
PP			DECFSZ	COUNT1
			GOTO	WRITE_CELL2

			RETURN

WRITE_CELL1	CALL	WRITE_CELL
			GOTO LL

WRITE_CELL2 CALL	WRITE_CELL
			
			GOTO PP

WRITE_CELL	BTFSC	INDF,0
			CALL	WRITE_S
			BTFSC	INDF,1
			CALL	WRITE_E
			BTFSC	INDF,2
			CALL	WRITE_OBS
			BTFSC	INDF,3
			CALL	WRITE_EMP
			BTFSC	INDF,4
			CALL	WRITE_AES

			INCF	FSR
			RETURN

;----------------------------
WRITE_EMP	MOVLW	B'10101'
			MOVWF	PORTA
			CALL 	TOGGLE
			MOVLW	B'11111'
			MOVWF	PORTA
			CALL	TOGGLE
			RETURN

WRITE_OBS	MOVLW	B'11111'
			MOVWF	PORTA
			CALL 	TOGGLE
			MOVLW	B'11111'
			CALL	TOGGLE
			RETURN

WRITE_PATH	CALL	WRITE_P
			CALL	WRITE_A
			CALL	WRITE_T
			CALL	WRITE_H
			RETURN

WRITE_M		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11101'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE M
			RETURN

WRITE_P		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10000'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE M
			RETURN

WRITE_0		MOVLW	B'10011'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10000'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE 0
			RETURN

WRITE_5		MOVLW	B'10011'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE 5
			RETURN

WRITE_@		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10000'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE @
			RETURN

WRITE_COMMA		MOVLW	B'10010'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11100'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE 0
			RETURN

WRITE_A		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10001'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE A
			RETURN

WRITE_B		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10010'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE B
			RETURN

WRITE_C		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10011'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE C
			RETURN

WRITE_X		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11000'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE X
			RETURN
WRITE_Z		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11010'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE Z
			RETURN

WRITE_D		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE D
			RETURN

WRITE_E		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE E
			RETURN

WRITE_F		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10110'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE F
			RETURN

WRITE_H		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11000'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE H
			RETURN

WRITE_I		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11001'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE F
			RETURN

WRITE_T		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE T
			RETURN

WRITE_U		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE U
			RETURN


WRITE_S		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10011'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE S
			RETURN
WRITE_O		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11111'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE O
			RETURN

WRITE_L		MOVLW	B'10100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11100'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE L
			RETURN

WRITE_V		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10110'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE V
			RETURN

WRITE_R		MOVLW	B'10101'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10010'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE R
			RETURN

WRITE_SPC	MOVLW	B'11010'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'10000'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE SPACE
			RETURN

WRITE_3SPC	CALL	WRITE_SPC
			CALL	WRITE_SPC
			CALL	WRITE_SPC
			RETURN

WRITE_AES	MOVLW	B'10010'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'11010'
			MOVWF	PORTA
			CALL	TOGGLE	;WRITE AESTRIKS
			RETURN


CLEAR		MOVLW	B'00000'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00001'
			MOVWF	PORTA
			CALL 	TOGGLE	;CLEAR THE DISPLAY
			RETURN

NEWL		MOVLW	B'01100'
			MOVWF	PORTA
			CALL	TOGGLE
			MOVLW	B'00000'
			MOVWF	PORTA	
			CALL	TOGGLE	
			RETURN														;SETS THE CURSUR TO THE FISRT ENTRY OF THE NEWLINE

TOGGLE		BSF PORTB,1
			NOP
			BCF	PORTB,1
			CALL DELAY10MS
			RETURN
																			;TOGGLE function for the lcd




;/////////////////////////DELAYS
DELAY10MS	MOVLW	0X0A
			MOVWF	COUNT2
LOPPR		MOVLW	0X00
			MOVWF	COUNT3
LOOPS0		INCFSZ	COUNT3
			GOTO	LOOPS0
			MOVLW	D'76'
			MOVWF	COUNT3
LOOPS1		DECFSZ	COUNT3
			GOTO	LOOPS1
			DECFSZ	COUNT2
			GOTO	LOPPR
			RETURN
																			;10 ms delay for debouncing

DELAY40MS		MOVLW	D'40'
			MOVWF	COUNT2
LOOP0		MOVLW	0X00
			MOVWF	COUNT1
LOOP1		INCFSZ	COUNT1
			GOTO	LOOP1
			MOVLW	D'76'
			MOVWF	COUNT1
LOOP2		DECFSZ	COUNT1
			GOTO	LOOP2
			DECFSZ	COUNT2
			GOTO	LOOP0
			RETURN
																			;40 ms delay for LCD initialization

DELAY200MS				CALL	DELAY40MS
			CALL	DELAY40MS
			CALL	DELAY40MS
			CALL	DELAY40MS
			CALL	DELAY40MS
			RETURN
DELAY5S		CALL	DELAY1S
			CALL	DELAY1S
			CALL	DELAY1S
			CALL	DELAY1S
			CALL	DELAY1S
			RETURN
DELAY1S		MOVLW	H'00'
			MOVWF	COUNT3
			MOVWF	COUNT2
			MOVLW	0x05
			MOVWF	COUNT1	
LOOPS		INCFSZ	COUNT3, F
			GOTO	LOOPS
			INCFSZ	COUNT2, F
			GOTO	LOOPS
			DECFSZ	COUNT1,	F
			GOTO	LOOPS
			RETURN
																					;1 SECOND DELAY

		END